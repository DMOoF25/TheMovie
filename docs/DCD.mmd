classDiagram
    direction TB
    namespace TheMovie.Domain.Entities {
        class Movie {
            +Guid Id
            +string Title
            +int Duration
            +Genre Genre
            +Movie(string title, int duration)
            +HasGenre(Genre genre) :bool
            +AddGenre(Genre genre) :void
            +RemoveGenre(Genre genre) :void
        }
    }

    namespace TheMovie.Domain.ValueObjects {
        class Genre {
            Action
            Adventure
            Biography
            Comedy
            Crime
            Drama
            History
            Horror
            Music
            Mystery
            Romance
            Thriller
            War
        }
    }

    namespace TheMovie.Infrastructure.Data {
        class MovieRepository {
        }    

        class RepositoryBase~TEntity~ {
            -ConcurrentDictionary~Guid, TEntity~ _store
            -Func~TEntity, Guid~ _getId
            -Action~TEntity, Guid~ _setId
            RepositoryBase(Func~TEntity, Guid~? idSelector = null, Action~TEntity, Guid~? idSetter = null)
        }
    }

    namespace TheMovie.Application.Abstractions {
        class IRepository {
            +AddAsync(TEntity entity, CancellationToken cancellationToken = default) : Task
            +AddRangeAsync(IEnumerable~TEntity~ entities, CancellationToken cancellationToken = default) : Task
            +GetByIdAsync(Guid id, CancellationToken cancellationToken = default) : Task~TEntity~~
            +GetAllAsync(CancellationToken cancellationToken = default) : Task~IEnumerable~TEntity~
            +UpdateAsync(TEntity entity, CancellationToken cancellationToken = default) : Task
            +DeleteAsync(TEntity entity, CancellationToken cancellationToken = default) : Task
        }

        class IMovieRepository {

        }
    }

    <<interface>> IRepository
    <<interface>> IMovieRepository
    <<abstract>> RepositoryBase
    <<enumeration>> Genre

    %% Relationships
    Movie --> Genre : uses
    MovieRepository ..|> RepositoryBase : "implements"
    Movie --* MovieRepository  : "have"
    MovieRepository ..|> IMovieRepository : "implements"
    RepositoryBase ..|> IRepository : "implements"
    IMovieRepository ..|> IRepository : "inherits"
